import { useState } from 'react'
import { Box, Button, Typography, Alert } from '@mui/material'
import { loadLevelFromFile, LevelLoadError } from '../utils/levelLoader'
import type { Level } from '../types'

interface LevelLoaderProps {
  onLevelLoaded: (level: Level) => void
}

export const LevelLoader = ({ onLevelLoaded }: LevelLoaderProps) => {
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)

  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file) return

    if (!file.name.endsWith('.json')) {
      setError('Please select a JSON file')
      return
    }

    setLoading(true)
    setError(null)

    try {
      const level = await loadLevelFromFile(file)
      onLevelLoaded(level)
      setError(null)
    } catch (err) {
      if (err instanceof LevelLoadError) {
        setError(`Level Load Error: ${err.message}${err.field ? ` (Field: ${err.field})` : ''}`)
      } else {
        setError(`Unknown error: ${err}`)
      }
    } finally {
      setLoading(false)
      // Clear the input
      event.target.value = ''
    }
  }

  const loadSamplePrometheusLevel = () => {
    // This would normally load from a URL or local file
    // For now, we can test with the sample level in App.tsx
    setError('Use the "Load Test Level" button in the main app for now. File loading will be implemented when we have a proper server.')
  }

  return (
    <Box sx={{ mb: 3 }}>
      <Typography variant="h6" gutterBottom>
        Load Prometheus Level
      </Typography>
      
      <Box sx={{ display: 'flex', gap: 2, alignItems: 'center', mb: 2 }}>
        <Button
          variant="contained"
          component="label"
          disabled={loading}
        >
          {loading ? 'Loading...' : 'Select JSON File'}
          <input
            type="file"
            accept=".json"
            onChange={handleFileSelect}
            style={{ display: 'none' }}
          />
        </Button>
        
        <Button
          variant="outlined"
          onClick={loadSamplePrometheusLevel}
        >
          Load Sample Level
        </Button>
      </Box>

      {error && (
        <Alert severity="error" sx={{ mb: 2 }}>
          {error}
        </Alert>
      )}

      <Typography variant="body2" color="text.secondary">
        Select a JSON level file generated by Prometheus to test the game engine.
        The file should contain level metadata, circuit definition, and solution data.
      </Typography>
    </Box>
  )
}